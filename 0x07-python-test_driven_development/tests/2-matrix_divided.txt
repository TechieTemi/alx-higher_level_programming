========================================================================================
Documentation and Edge cases of "2-matrix_divided.py" module by Dorcas Temitope Temitope
========================================================================================

This is the module that contain a function known as "matrix_divided()".
"matrix_divided()" is a function that divides all elements of a matrix and the matrix must be a lists of integers or floats.

Usage with List
===============
::
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[0.33, 0.67, 1.0, 1.33, 1.67, 2.0]

Passing list as a second argument instead of integer
::
>>> matrix_divided(matrix, matrix)
Traceback (most recent call last):
    ...
TypeError: div must be a number

Passing just an argument to it will result in error
::
>>> matrix_divided(matrix)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Passing a float argument to it
::
>>> matrix_divided(matrix, 5.9)
[0.17, 0.34, 0.51, 0.68, 0.85, 1.02]

Passing more than required argument to it
::
>>> matrix_divided(matrix, 5.9, matrix)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

Passing a Zero argument to it
::
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

Passing a negative value to it
::
>>> matrix_divided(matrix, -6)
[-0.17, -0.33, -0.5, -0.67, -0.83, -1.0]

Calling the function without any argument
::
>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Mixing the position of the two value
::
>>> matrix_divided(4, matrix)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix(list of lists) of integers/floats

Pasing integers value to the two argument
::
>>> matrix_divided(4, 4)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix(list of lists) of integers/floats

Passing a tuple in the argument
::
>>> a = (1, 3, 5)
>>> matrix_divided(matrix, a)
Traceback (most recent call last):
    ...
TypeError: div must be a number

Passing a list in the argument
::
>>> matrix_divided(matrix, list(a))
Traceback (most recent call last):
    ...
TypeError: div must be a number

Passing a dictionart in the argument
::
>>> dict = {1: "I", 2: "Love", 3: "you"}
>>> matrix_divided(matrix, dict)
Traceback (most recent call last):
    ...
TypeError: div must be a number

Passsing a string in the argument
::
>>> matrix_divided(matrix, "Dorcas")
Traceback (most recent call last):
    ...
TypeError: div must be a number

Misspell of word
::
>>> matrix_divided(matix, 4)
Traceback (most recent call last):
    ...
NameError: name 'matix' is not defined

Passing an int data type as argument
::
>>> matrix_divided(matrix, int)
Traceback (most recent call last):
    ...
TypeError: div must be a number

Passing a float data type as argument
::
>>> matrix_divided(matrix, float)
Traceback (most recent call last):
    ...
TypeError: div must be a number

Mistake in the calling of the function's name
::
>>> matrix_dividd(matrix, float)
Traceback (most recent call last):
    ...
NameError: name 'matrix_dividd' is not defined

Doing a conversion in it
::
>>> matrix_divided(matrix, type(int))
Traceback (most recent call last):
    ...
TypeError: div must be a number



